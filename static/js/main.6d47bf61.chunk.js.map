{"version":3,"sources":["components/AddItemContainer/AddItemContainer.jsx","components/ToDos/ToDoItem.jsx","components/ToDos/ToDoList.jsx","App.js","index.js"],"names":["AddItemContainer","props","className","onSubmit","onAddItem","onChange","event","setValue","target","value","maxLength","placeholder","onClick","type","ToDoItem","classes","checked","push","join","id","onChecked","message","onDelItem","TodoList","todoList","ToDoItems","map","item","App","React","useState","setToDo","count","preventDefault","trim","leng","length","concat","index","splice","ReactDOM","render","document","getElementById"],"mappings":"kMAEe,SAASA,EAAiBC,GACrC,OACI,qBAAKC,UAAU,mBAAf,SACI,uBAAMC,SAAWF,EAAMG,UAAvB,UACE,gCACA,gIACA,uBAAOC,SAAW,SAAAC,GAAK,OAAIL,EAAMM,SAASD,EAAME,OAAOC,QAASC,UAAY,GAAKC,YAAY,wFAAkBF,MAAQR,EAAMQ,QAC7H,yIAEA,wBAAQG,QAAUX,EAAMG,UAAYS,KAAK,SAAzC,mECTC,SAASC,EAASb,GAC7B,IAAIc,EAAU,CAAC,YAMf,OAJId,EAAMe,SACND,EAAQE,KAAK,QAIb,sBAAKf,UAAYa,EAAQG,KAAK,KAA9B,UACI,gCACI,4BAAKjB,EAAMkB,KACX,uBAAOd,SAAWJ,EAAMmB,UAAYP,KAAK,WAAWG,QAAUf,EAAMe,UACpE,+BAAQf,EAAMoB,aAElB,wBAAQT,QAAUX,EAAMqB,UAAxB,2DCbG,SAASC,EAAStB,GAE7B,IAAIuB,EAAWvB,EAAMwB,UAAUC,KAAI,SAAAC,GAAI,OACnC,cAACb,EAAD,CAAUK,GAAKQ,EAAKR,GAAKH,QAAUW,EAAKX,QAAUK,QAAUM,EAAKN,QACjED,UAAY,kBAAMnB,EAAMmB,UAAUO,EAAKR,KACvCG,UAAY,kBAAMrB,EAAMqB,UAAUK,EAAKR,MACjCQ,EAAKR,OAEf,OAAO,qBAAKjB,UAAU,WAAf,SACGsB,ICPd,IAwFeI,EAxFH,WAIV,MAA8BC,IAAMC,SAAS,CAC3C,CAAEX,GAAG,EAAGH,SAAS,EAAOK,QAAQ,gGAChC,CAAEF,GAAG,EAAGH,SAAS,EAAOK,QAAQ,yFAChC,CAAEF,GAAG,EAAGH,SAAS,EAAOK,QAAQ,gGAChC,CAAEF,GAAG,EAAGH,SAAS,EAAOK,QAAQ,mFAChC,CAAEF,GAAG,EAAGH,SAAS,EAAOK,QAAQ,iGAChC,CAAEF,GAAG,EAAGH,SAAS,EAAMK,QAAQ,mGANjC,mBAAOI,EAAP,KAAmBM,EAAnB,KA6CA,EAA0BF,IAAMC,SAAS,IAAzC,mBAAOrB,EAAP,KAAcF,EAAd,KAuBA,OACE,qBAAKL,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,sEACA,8JAA4B,+BA/DxB,WACV,IAAI8B,EAAQ,EACZ,IAAK,IAAIL,KAAQF,GACiB,IAA5BA,EAAUE,GAAMX,SAAmBgB,IAGzC,OADc,IAAVA,IAAaA,EAAM,kHAChBA,EAyDmCA,QACpC,cAAChC,EAAD,CAAkBI,UA3BR,SAACE,GAEjB,GADAA,EAAM2B,iBACFxB,EAAMyB,OAAO,CACf,IAAIC,EAAOV,EAAUW,OACrBL,EAAQN,EAAUY,OAAO,CAAC,CACxBlB,KAAOgB,EACPnB,SAAS,EACTK,QAASZ,KAEXgB,EAAUC,KAAI,SAACC,EAAMW,GAEnB,OADAX,EAAKR,KAAQmB,EACNX,MAGTpB,EAAS,MAaqCA,SAAWA,EAAWE,MAAQA,OAE1E,kCACEgB,EAAUW,OAAU,cAAC,EAAD,CAAUX,UAAYA,EAAYL,UAvD5C,SAACD,GACjBY,EAAQN,EAAUC,KAAI,SAAAC,GAIlB,OAHIA,EAAKR,KAAOA,IACZQ,EAAKX,SAAWW,EAAKX,SAElBW,OAkDyEL,UA7CpE,SAACH,GACjBM,EAAUc,SAAUpB,EAAI,GACxBY,EACEN,EAAUC,KAAI,SAACC,EAAMW,GAEnB,OADAX,EAAKR,KAAQmB,EACNX,SAwCuG,iPCjFtHa,IAASC,OAAQ,cAAC,EAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.6d47bf61.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function AddItemContainer(props){\r\n    return(\r\n        <div className='addItemContainer'>\r\n            <form onSubmit={ props.onAddItem }>\r\n              <div>\r\n              <span>Добавить заметку:</span>\r\n              <input onChange={ event => props.setValue(event.target.value) } maxLength={ 50 } placeholder='Введите заметку' value={ props.value }/>\r\n              <p>*50 символов максимум</p>\r\n              </div>\r\n              <button onClick={ props.onAddItem } type='submit'>Добавить</button>\r\n            </form>\r\n          </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function ToDoItem(props){\r\n    let classes = ['ToDoItem'];\r\n\r\n    if (props.checked){\r\n        classes.push('done');\r\n    }\r\n    \r\n    return(\r\n        <div className={ classes.join(' ') }>\r\n            <div>\r\n                <p>{ props.id }</p>\r\n                <input onChange={ props.onChecked } type='checkbox' checked={ props.checked } />\r\n                <span>{ props.message }</span>\r\n            </div>\r\n            <button onClick={ props.onDelItem }>Удалить</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ToDoItem from './ToDoItem';\r\n\r\nexport default function TodoList(props) {\r\n    \r\n    let todoList = props.ToDoItems.map(item => \r\n        <ToDoItem id={ item.id } checked={ item.checked } message={ item.message } \r\n        onChecked={ () => props.onChecked(item.id) } \r\n        onDelItem={ () => props.onDelItem(item.id) }\r\n        key={ item.id }/>)\r\n\r\n    return(<div className='ToDoList'>\r\n            { todoList }\r\n        </div>\r\n    );\r\n};","import React from 'react';\nimport './App.css';\nimport AddItemContainer from './components/AddItemContainer/AddItemContainer';\nimport ToDoList from './components/ToDos/ToDoList';\n\nconst App = () => {\n  // State of Array items\n  //-----------------//\n  //\n  const [ToDoItems , setToDo] = React.useState([\n    { id:1, checked: false, message:'Сходить в магазин' },\n    { id:2, checked: false, message:'Доделать проект' },\n    { id:3, checked: false, message:'Написать свой бит' },\n    { id:4, checked: false, message:'Написать другу' },\n    { id:5, checked: false, message:'Залить проект на GitHub' },\n    { id:6, checked: true, message:'Залить проект на GitHub' }\n  ]);\n  \n  // counter of active note\n  let count = () => {\n    let count = 0;\n    for (let item in ToDoItems){\n      if (ToDoItems[item].checked === false) count++\n    }\n    if (count === 0) count='Нет активных заметок'\n    return count;\n  };\n\n  // ItemList actions\n  //-----------------//\n  // if activate checkbox\n  const onChecked = (id) => {\n    setToDo(ToDoItems.map(item => {\n        if (item.id === id){\n            item.checked = !item.checked;\n        }\n        return item;\n    }));\n  };\n\n  // if delete item of list\n  const onDelItem = (id) => {\n    ToDoItems.splice((--id),1);\n    setToDo(\n      ToDoItems.map((item, index) => {\n        item.id = (++index);\n        return item;\n    })\n    )\n  }\n\n  // AddItemContainer\n  //-----------------//\n  // State of ItemAdd input\n  const [value, setValue] = React.useState('');\n\n  const onAddItem = (event) => {\n    event.preventDefault();\n    if (value.trim()){\n      let leng = ToDoItems.length;\n      setToDo(ToDoItems.concat([{\n        id: (++leng),\n        checked: false,\n        message: value\n      }]),\n      ToDoItems.map((item, index) => {\n        item.id = (++index);\n        return item;\n      })\n      );\n      setValue('');\n    }\n  }\n\n  // JSX App component\n  //-----------------//\n  //\n  return(\n    <div className='App'>\n      <div className='container'>\n        <header>\n          <h1>TODO List Experience Project (React)</h1>\n          <h2>Всего активных заметок: <span>{ count() }</span></h2>\n          <AddItemContainer onAddItem={ onAddItem } setValue={ setValue } value={ value } />\n        </header>\n        <article>\n        { ToDoItems.length ? (<ToDoList ToDoItems={ ToDoItems } onChecked={ onChecked } onDelItem={ onDelItem } />) : <p>У Вас нет заметок. Вы можете их добавить</p> }\n        </article>\n    </div>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App />,document.getElementById('root') );"],"sourceRoot":""}